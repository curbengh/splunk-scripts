[librenms]
# specify timezone of librenms
# TZ identifier column
# https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List
# TZ = UTC
TIME_FORMAT = %Y-%m-%d %H:%M:%S
TRANSFORMS-nmshost = set_nms_host

# forwarder
[source::nms_eventlogs]
TRUNCATE = 0
INDEXED_EXTRACTIONS = JSON
# each original event has an array of objects
SEDCMD-remove_prefix = s/^\[\[//
SEDCMD-remove_suffix = s/\]\]$//
# separate each object into a line
LINE_BREAKER = }(, ){\"hostname\"
# a line represents an event
SHOULD_LINEMERGE = 0
# use the original timestamp as event time
# DATETIME_CONFIG = CURRENT
TIMESTAMP_FIELDS = datetime

[source::nms_alertlogs]
TRUNCATE = 0
INDEXED_EXTRACTIONS = JSON
SEDCMD-remove_prefix = s/^\[\[//
SEDCMD-remove_suffix = s/\]\]$//
LINE_BREAKER = }(, ){\"hostname\"
SHOULD_LINEMERGE = 0
TIMESTAMP_FIELDS = time_logged

[source::nms_authlogs]
TRUNCATE = 0
SHOULD_LINEMERGE = 0
INDEXED_EXTRACTIONS = JSON
SEDCMD-remove_prefix = s/^\[\[//
SEDCMD-remove_suffix = s/\]\]$//
LINE_BREAKER = }(, ){\"id\"
TIMESTAMP_FIELDS = datetime

[source::nms_syslogs]
TRUNCATE = 0
SHOULD_LINEMERGE = 0
INDEXED_EXTRACTIONS = JSON
SEDCMD-remove_prefix = s/^\[\[//
SEDCMD-remove_suffix = s/\]\]$//
LINE_BREAKER = }(, ){\"hostname\"
TIMESTAMP_FIELDS = timestamp

[source::nms_alerts]
TRUNCATE = 0
SHOULD_LINEMERGE = 0
# INDEXED_EXTRACTIONS is not enabled so that SEDCMD works more reliably.
# if it's enabled, the JSON parser can unpredictably split part of the prefix/suffix into separate events and
# SEDCMD does not work across events.
# https://community.splunk.com/t5/Getting-Data-In/SEDCMD-not-actually-replacing-data-during-indexing/m-p/387807
# SEDCMD does work with INDEXED_EXTRACTIONS, but you have to make sure the replacement is within an event
SEDCMD-remove_prefix = s/^\{"status": "ok", "alerts": \[//g
SEDCMD-remove_suffix = s/\], "count": [0-9]+\}$//g
LINE_BREAKER = }(, ){\"hostname\"
TIME_PREFIX = timestamp\"\: \"
MAX_TIMESTAMP_LOOKAHEAD = 19

[source::nms_devices]
TIME_PREFIX = last_ping\"\: \"
MAX_TIMESTAMP_LOOKAHEAD = 19
TRUNCATE = 0
SHOULD_LINEMERGE = 0
SEDCMD-remove_prefix = s/^\{"status": "ok", "devices": \[//
SEDCMD-remove_suffix = s/\], "count": [0-9]+\}$//
LINE_BREAKER = }(, ){\"device_id\"
# negative lookahead is used to include authpass value with (escaped) double-quote
# e.g. "authpass": "foo\"bar"
# SEDCMD and rex sed-mode supports PCRE
# https://docs.splunk.com/Documentation/Splunk/latest/SearchReference/rex#Sed_expressions
# GNU sed does not support PCRE (perl-compatible regular expression)
SEDCMD-cleanPwd = s/"authpass": "(?:(?!", "authalgo").+?)+"/"authpass": "redacted"/g

# search head
[source::nms_eventlogs]
KV_MODE = none
AUTO_KV_JSON = 0
SHOULD_LINEMERGE = 0

[source::nms_syslogs]
KV_MODE = none
AUTO_KV_JSON = 0
SHOULD_LINEMERGE = 0

[source::nms_authlogs]
KV_MODE = none
AUTO_KV_JSON = 0
SHOULD_LINEMERGE = 0

[source::nms_alertlogs]
KV_MODE = none
AUTO_KV_JSON = 0
SHOULD_LINEMERGE = 0

[source::nms_alerts]
# index-time field extraction (INDEXED_EXTRACTIONS) is not used
KV_MODE = json
AUTO_KV_JSON = 1
SHOULD_LINEMERGE = 0

[source::nms_devices]
KV_MODE = json
AUTO_KV_JSON = 1
SHOULD_LINEMERGE = 0
EVAL-daysUp = round(uptime/86400,2)
EVAL-sysDescr = split(sysDescr, "\r\n")
EVAL-notes = split(notes, "\r\n")
